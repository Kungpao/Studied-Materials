/*

#1
Declare 2d array with size 3x5.
fill with random values.
Declare a variable for saving a sum of all elements of the array.
Make a reference for it.
When counting sum, use a reference.
When printing sum, use a variable.

*/

#include "stdafx.h"
#include <iostream>
#include <locale.h>
#include <conio.h>
#include <time.h>
#include <stdlib.h>
#include <malloc.h>
#include <memory.h>

// Fill 2d array with random values
void arr_fill(int **arr, const int& row, const int& col)
{
	for (size_t i = 0; i < row; i++)
	{
		for (size_t j = 0; j < col; j++)
		{
			arr[i][j] = rand() % 99 + 1;
		}
	}
}

// print 2d array on console
void arr_print(int **arr, const int& row, const int& col)
{
	printf("Your array is:\n\n");
	for (size_t i = 0; i < row; i++)
	{
		for (size_t j = 0; j < col; j++)
		{
			std::cout << arr[i][j] << " ";
		}
		std::cout << std::endl;
	}
	printf("\n");
}

//Counting sum of all elements of 2d array
void arr_sum(int **arr, const int& row, const int& col, int &sum)
{
	for (size_t i = 0; i < row; i++)
	{
		for (size_t j = 0; j < col; j++)
		{
			sum += arr[i][j];
		}
	}
}

int main()

{

	//for using kirilica in our programm
	setlocale(LC_ALL, "RUS");

	//for true random values generation
	srand(time(0));

	// for restarting program. appointing ESC as exit button to press
	int exit = 0;
	while (exit != 27)
	{
		//Declaring 2d array 3x5
		const unsigned short int row = 3, col = 5;

		//Declaring 2d array. making it with dyn memory
		int **arr = (int**)malloc(row*sizeof(int*));

		// checking for memory error in malloc
		if (!arr)
		{
			std::cout << "error **arr = malloc";
			return 0;
		}

		// setting memory for each pointer one by one
		for (size_t i = 0; i < row; i++)
		{
			arr[i] = (int*)malloc(col*sizeof(int));
			// not to forget to check for memory error in malloc
			if (!arr[i])
			{
				std::cout << "error *arr[i] = malloc";
				return 0;
			}
			memset(arr[i], 0, col*sizeof(int));
		}

		//arr_print(arr, row, col);
		//printf("\n-----------------\n");

		// making storage for sum value
		int sum = 0;
		int& sum_r = sum;

		//filling array with random values
		arr_fill(arr, row, col);

		//Showing it to the user
		arr_print(arr, row, col);

		//Calculating sum
		arr_sum(arr, row, col, sum_r);

		std::cout << "arr_sum = " << sum << std::endl;

		// freeing memory for colums
		for (int i = 0; i < row; i++)
			free(arr[i]);

		// freeing memory for array and setting pointer to 0
		free(arr);
		arr = 0;

		//asking user wether he wants to restar ir exit the program
		printf("\nPress any key to restart or ESC for exit:\n");
		exit = _getch();
		if (exit != 27)
			system("CLS");
	}
	return 0;
}
