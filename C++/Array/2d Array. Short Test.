---------------------------------------------#1 of 4------------------------------------------------------------

//-Make a 5x5 array
//-ask user to enter number of a row, col and number to save it ubnder apropriate indexes of array in question
//-print resulting array 

#include "stdafx.h"
#include <locale.h>
#include <conio.h>
#include <stdlib.h>

//function prototype for user to decide either to exit or to restart program after finish
void Exit();

int _tmain(int argc, _TCHAR* argv[])
{

	//for using kirilica in our programm
	setlocale(LC_ALL, "RUS");

	// for restarting program. appointing ESC as exit button to press
	int exit = 0;
	while (exit != 27)
	{

		//Size of a matrix SIZE
		const unsigned short int SIZE = 5;

		//Declaring 2d static array and setting values to 0
		int a[SIZE][SIZE] = { 0 };

		//Asking user to enter the number of a row
		printf("введите номер строки\n"); 
		int user_row = 0;
		scanf_s("%d", &user_row);
		
		//quick error check
		if (!user_row || (user_row > SIZE || user_row <0))
		{
			printf("Error! value is not correct!");
			Exit();
		}

		//Asking user to enter the number of a col
		printf("введите номер столбца\n");
		int user_col = 0;
		scanf_s("%d", &user_col);

		//quick error check
		if (!user_col || (user_col > SIZE || user_col <0))
		{
			printf("Error! value is not correct!");
			Exit();
		}

		//Asking user to enter the number he wish to see
		printf("введите число\n"); 
		int user_num = 0;
		scanf_s("%d", &user_num);

		//quick error check
		if (!user_num)
		{
			printf("Error! value is not correct!");
			Exit();
		}

		// casting user entered numbers to array indexes
		if (user_row == 0)
			continue;
		else
			user_row--;

		if (user_col == 0)
		{
			continue;
		}
		else
			user_col--;

		// Saving the user number at location. 
		a[user_row][user_col] = user_num; 

		// Printig the resulting array
		for (int i = 0; i < SIZE; i++) // строки
		{
			for (int j = 0; j < SIZE; j++) // столбцы
				printf("%d ", a[i][j]);
			printf("\n");
		}
		printf("\n");

		Exit();

	}
	return 0;
}
//function body
void Exit()
{
	printf("\nPress any key to restart or ESC for exit:\n");
	int exit = _getch();
	if (exit != 27)
		system("CLS");

}

---------------------------------------------#2 of 4------------------------------------------------------------


//-Make a 3x3 array
//-ask user to fill it with numbers.
//-print resulting array 


#include "stdafx.h"
#include <locale.h>
#include <conio.h>
#include <stdlib.h>

//function prototype for user to decide either to exit or to restart program after finish
void Exit();

int _tmain(int argc, _TCHAR* argv[])
{

	//for using kirilica in our programm
	setlocale(LC_ALL, "RUS");

	// for restarting program. appointing ESC as exit button to press
	int exit = 0;
	while (exit != 27)
	{

		//Size of a matrix SIZE
		const unsigned short int SIZE = 3;

		//Declaring 2d static array and setting values to 0
		int a[SIZE][SIZE] = { 0 };

		//asking user to fill up the array. 
		printf("Please fill the array with numbers\n");
		for (int i = 0; i < SIZE; i++)
		{
			for (int j = 0; j < SIZE; j++)
			{
				printf("a[%d][%d]= ", i, j);
				scanf_s("%d", &a[i][j]);

				//quick error check
				if (!a[i][j])
				{
					printf("Error! value is not correct!");
					return 0;
				}
			}
		}
		
		// Printig the resulting array
		printf("Your array is:\n");
		for (int i = 0; i < SIZE; i++) 
		{
			for (int j = 0; j < SIZE; j++) 
				printf("%d ", a[i][j]);
			printf("\n");
		}
		printf("\n");

		Exit();

	}
	return 0;
}
//function body
void Exit()
{
	printf("\nPress any key to restart or ESC for exit:\n");
	int exit = _getch();
	if (exit != 27)
		system("CLS");

}

---------------------------------------------#3 of 4------------------------------------------------------------


//-Make a 5x5 array
//-fill it with rnd values.
//-print resulting array and sum of every row and col


#include "stdafx.h"
#include <locale.h>
#include <conio.h>
#include <stdlib.h>
#include <time.h>

//function prototype for user to decide either to exit or to restart program after finish
void Exit();

int _tmain(int argc, _TCHAR* argv[])
{

	//for using kirilica in our programm
	setlocale(LC_ALL, "RUS");

	//rnd values generation
	srand(time(0));

	// for restarting program. appointing ESC as exit button to press
	int exit = 0;
	while (exit != 27)
	{

		//Size of a matrix SIZE
		const unsigned short int SIZE = 5;

		//Declaring 2d static array and setting values to 0
		int a[SIZE][SIZE] = { 0 };

		//storage for sum
		int row_sum = 0;
		int col_sum = 0;

		for (int i = 0; i < SIZE; i++) 
		{

			for (int j = 0; j < SIZE; j++) 
			{
				a[i][j] = rand() % 2; 
			}
		}

		//making additional array just to make printing result more pretty
		int row_sum_array[SIZE] = { 0 };

		// Counting sums and printing result in same loop
		printf("Your array is:\n");
		for (int i = 0; i < SIZE; i++) 
		{
			//clearing sum storages
			row_sum = 0;
			col_sum = 0;
			for (int j = 0; j < SIZE; j++)
			{
				row_sum += a[i][j];
				col_sum += a[j][i];
				printf("%d ", a[i][j]);
			}
			row_sum_array[i] = col_sum;
			printf("= %d\n",row_sum);
		}

		//cosmetics
		printf("= = = = =\n");

		// printing additional array
		for (int i = 0; i < SIZE; i++)
		{
			printf("%d ", row_sum_array[i]);
		}
		printf("\n");
		Exit();

	}
	return 0;
}
//function body
void Exit()
{
	printf("\nPress any key to restart or ESC for exit:\n");
	int exit = _getch();
	if (exit != 27)
		system("CLS");

}

---------------------------------------------#4 of 4------------------------------------------------------------

//-Make a 3x3 array
//-fill it with rnd values.
//-print resulting array and sum of diagonal lines of array


#include "stdafx.h"
#include <locale.h>
#include <conio.h>
#include <stdlib.h>
#include <time.h>

//function prototype for user to decide either to exit or to restart program after finish
void Exit();

int _tmain(int argc, _TCHAR* argv[])
{

	//for using kirilica in our programm
	setlocale(LC_ALL, "RUS");

	//rnd values generation
	srand(time(0));

	// for restarting program. appointing ESC as exit button to press
	int exit = 0;
	while (exit != 27)
	{

		//Size of a matrix SIZE
		const unsigned short int SIZE = 3;

		//Storages for counting sum of diagonals of the array. x like
		int sum_left_right = 0;
		int sum_right_left = 0;

		//Declaring 2d static array and setting values to 0
		int a[SIZE][SIZE] = { 0 };

		for (int i = 0; i < SIZE; i++) 
		{

			for (int j = 0; j < SIZE; j++) 
			{
				a[i][j] = rand() % 2; 
			}
		}

		// Printing resulting array
		printf("Your array is:\n");
		for (int i = 0; i < SIZE; i++)
		{
			for (int j = 0; j < SIZE; j++)
			{
				printf("%d ", a[i][j]);
			}
			printf("\n");
		}

		//loop for counting sums
		for (int i = 0, j = SIZE - 1; i < SIZE && j >= 0; i++, j--)
		{
			sum_left_right += a[i][j]; 
			sum_right_left += a[j][j];
		}
		printf("sum_left_right = %d,sum_right_left = %d \n", sum_left_right, sum_right_left);

		printf("\n");
		Exit();

	}
	return 0;
}
//function body
void Exit()
{
	printf("\nPress any key to restart or ESC for exit:\n");
	int exit = _getch();
	if (exit != 27)
		system("CLS");

}
